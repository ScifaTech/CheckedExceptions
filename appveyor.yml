
# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2017

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - '%LocalAppData%\NuGet\Cache'    # NuGet < v3
  - '%LocalAppData%\NuGet\v3-cache' # NuGet v3


#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  parallel: true                  # enable MSBuild parallel builds
  project: CheckedExceptions.sln      # path to Visual Studio solution or project

dotnet_csproj:
  patch: true
  file: 'src\Directory.Build.Props'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

# scripts to run before build
before_build:

# to run your custom scripts instead of automatic MSBuild
build_script:

# scripts to run after build (working directory and environment changes are persisted from the previous steps)
after_build:

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to run tests against only selected assemblies and/or categories
test:
  assemblies:
    only:
      - asm1.dll
      - asm2.dll

  categories:
    only:
      - UI
      - E2E

# to run tests against all except selected assemblies and/or categories
#test:
#  assemblies:
#    except:
#      - asm1.dll
#      - asm2.dll
#
#  categories:
#    except:
#      - UI
#      - E2E

# to run tests from different categories as separate jobs in parallel
#test:
#  categories:
#    - A            # A category common for all jobs
#    - [UI]         # 1st job
#    - [DAL, BL]    # 2nd job

# scripts to run before tests (working directory and environment changes are persisted from the previous steps such as "before_build")
before_test:
  - echo script1
  - ps: Write-Host "script1"

# to run your custom scripts instead of automatic tests
test_script:
  - echo This is my custom test script

# scripts to run after tests
after_test:

# to disable automatic tests
#test: off


    # Deploying to NuGet feed
  - provider: NuGet
    server: https://my.nuget.server/feed
    api_key:
      secure: FYWX6NfjZIVw==
    skip_symbols: false
    symbol_server: https://your.symbol.server/feed
    artifact: MyPackage.nupkg

    # Deploy to GitHub Releases
  - provider: GitHub
    artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
    draft: false
    prerelease: false
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true       # deploy on tag push only